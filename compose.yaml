services:
  caddy:
    image: caddy:2.8.4
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    networks:
      - matcha-network
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - client
      - backend
      - db

  db:
    image: postgres:17
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      TZ: "UTC"
    ports:
      - "5432:5432"
    networks:
      - matcha-network
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  client:
    build:
      context: client
    env_file:
      - .env
    environment:
      NODE_ENV: "production"
    networks:
      - matcha-network
    volumes:
      - static-data:/usr/src/app

  backend:
    build:
      context: server
    env_file:
      - .env
    environment:
      NODE_ENV: "production"
      POSTGRES_HOST: "db"
    networks:
      - matcha-network
    depends_on:
      db:
        condition: service_healthy


networks:
  matcha-network:
    driver: bridge

volumes:
  db-data:
  static-data:
  caddy_data:
  caddy_config:
